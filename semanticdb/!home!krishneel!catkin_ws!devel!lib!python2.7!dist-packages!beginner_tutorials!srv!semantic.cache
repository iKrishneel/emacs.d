;; Object semanticdb-project-database-file
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "semanticdb-project-database-file"
  :tables
  (list
    (semanticdb-table "semanticdb-table"
      :major-mode python-mode
      :tags 
        '( ("\"\"\"autogenerated by genpy from beginner_tutorials/AddTwoIntsRequest.msg. Do not edit.\"\"\"" code nil nil [1 89])
            ("sys" include nil nil [90 100])
            ("False" code nil nil [152 157])
            ("genpy" include nil nil [158 170])
            ("struct" include nil nil [171 184])
            ("AddTwoIntsRequest" type
               (:superclasses ("genpy.Message")
                :members 
                  ( ("_md5sum" variable nil (reparse-symbol indented_block_body) [229 273])
                    ("_type" variable nil (reparse-symbol indented_block_body) [276 322])
                    ("_has_header" variable nil (reparse-symbol indented_block_body) [325 344])
                    ("_full_text" variable nil (reparse-symbol indented_block_body) [393 429])
                    ("__slots__" variable nil (reparse-symbol indented_block_body) [432 453])
                    ("_slot_types" variable nil (reparse-symbol indented_block_body) [456 487])
                    ("__init__" function
                       (:suite 
                          ( ("\"\"\"
    Constructor. Any message fields that are implicitly/explicitly
    set to None will be assigned a default value. The recommend
    use is keyword arguments as this is more robust to future message
    changes.  You cannot mix in-order arguments and keyword arguments.

    The available fields are:
       a,b

    :param args: complete set of field values, in .msg order
    :param kwds: use keyword arguments corresponding to message field names
    to set specific fields.
    \"\"\"" code nil (reparse-symbol indented_block_body) [530 1021])
                            ("if" code nil (reparse-symbol indented_block_body) [1026 1315]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [504 508])
                            ("args" variable nil (reparse-symbol function_parameters) [510 515])
                            ("kwds" variable nil (reparse-symbol function_parameters) [517 523]))                          
                        :documentation "
    Constructor. Any message fields that are implicitly/explicitly
    set to None will be assigned a default value. The recommend
    use is keyword arguments as this is more robust to future message
    changes.  You cannot mix in-order arguments and keyword arguments.

    The available fields are:
       a,b

    :param args: complete set of field values, in .msg order
    :param kwds: use keyword arguments corresponding to message field names
    to set specific fields.
    "
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [491 1315])
                    ("_get_types" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1333 1337]))                          
                        :documentation "
    internal API method
    ")
                        (reparse-symbol indented_block_body) [1318 1408])
                    ("serialize" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1425 1429])
                            ("buff" variable nil (reparse-symbol function_parameters) [1431 1435]))                          
                        :documentation "
    serialize message into buffer
    :param buff: buffer, ``StringIO``
    ")
                        (reparse-symbol indented_block_body) [1411 1840])
                    ("deserialize" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1859 1863])
                            ("str" variable nil (reparse-symbol function_parameters) [1865 1868]))                          
                        :documentation "
    unpack serialized message in str into this message instance
    :param str: byte array of serialized message, ``str``
    ")
                        (reparse-symbol indented_block_body) [1843 2258])
                    ("serialize_numpy" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2282 2286])
                            ("buff" variable nil (reparse-symbol function_parameters) [2288 2292])
                            ("numpy" variable nil (reparse-symbol function_parameters) [2294 2299]))                          
                        :documentation "
    serialize message with numpy array types into buffer
    :param buff: buffer, ``StringIO``
    :param numpy: numpy python module
    ")
                        (reparse-symbol indented_block_body) [2262 2765])
                    ("deserialize_numpy" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2790 2794])
                            ("str" variable nil (reparse-symbol function_parameters) [2796 2799])
                            ("numpy" variable nil (reparse-symbol function_parameters) [2801 2806]))                          
                        :documentation "
    unpack serialized message in str into this message instance using numpy for array types
    :param str: byte array of serialized message, ``str``
    :param numpy: numpy python module
    ")
                        (reparse-symbol indented_block_body) [2768 3262]))                  
                :type "class")
                nil [187 3262])
            ("_struct_I" variable nil nil [3263 3289])
            ("_struct_2q" variable nil nil [3290 3323])
            ("\"\"\"autogenerated by genpy from beginner_tutorials/AddTwoIntsResponse.msg. Do not edit.\"\"\"" code nil nil [3324 3413])
            ("sys" include nil nil [3414 3424])
            ("False" code nil nil [3476 3481])
            ("genpy" include nil nil [3482 3494])
            ("struct" include nil nil [3495 3508])
            ("AddTwoIntsResponse" type
               (:superclasses ("genpy.Message")
                :members 
                  ( ("_md5sum" variable nil (reparse-symbol indented_block_body) [3554 3598])
                    ("_type" variable nil (reparse-symbol indented_block_body) [3601 3648])
                    ("_has_header" variable nil (reparse-symbol indented_block_body) [3651 3670])
                    ("_full_text" variable nil (reparse-symbol indented_block_body) [3719 3750])
                    ("__slots__" variable nil (reparse-symbol indented_block_body) [3753 3772])
                    ("_slot_types" variable nil (reparse-symbol indented_block_body) [3775 3798])
                    ("__init__" function
                       (:suite 
                          ( ("\"\"\"
    Constructor. Any message fields that are implicitly/explicitly
    set to None will be assigned a default value. The recommend
    use is keyword arguments as this is more robust to future message
    changes.  You cannot mix in-order arguments and keyword arguments.

    The available fields are:
       sum

    :param args: complete set of field values, in .msg order
    :param kwds: use keyword arguments corresponding to message field names
    to set specific fields.
    \"\"\"" code nil (reparse-symbol indented_block_body) [3841 4332])
                            ("if" code nil (reparse-symbol indented_block_body) [4337 4572]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3815 3819])
                            ("args" variable nil (reparse-symbol function_parameters) [3821 3826])
                            ("kwds" variable nil (reparse-symbol function_parameters) [3828 3834]))                          
                        :documentation "
    Constructor. Any message fields that are implicitly/explicitly
    set to None will be assigned a default value. The recommend
    use is keyword arguments as this is more robust to future message
    changes.  You cannot mix in-order arguments and keyword arguments.

    The available fields are:
       sum

    :param args: complete set of field values, in .msg order
    :param kwds: use keyword arguments corresponding to message field names
    to set specific fields.
    "
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [3802 4572])
                    ("_get_types" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4590 4594]))                          
                        :documentation "
    internal API method
    ")
                        (reparse-symbol indented_block_body) [4575 4665])
                    ("serialize" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4682 4686])
                            ("buff" variable nil (reparse-symbol function_parameters) [4688 4692]))                          
                        :documentation "
    serialize message into buffer
    :param buff: buffer, ``StringIO``
    ")
                        (reparse-symbol indented_block_body) [4668 5078])
                    ("deserialize" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [5097 5101])
                            ("str" variable nil (reparse-symbol function_parameters) [5103 5106]))                          
                        :documentation "
    unpack serialized message in str into this message instance
    :param str: byte array of serialized message, ``str``
    ")
                        (reparse-symbol indented_block_body) [5081 5476])
                    ("serialize_numpy" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [5500 5504])
                            ("buff" variable nil (reparse-symbol function_parameters) [5506 5510])
                            ("numpy" variable nil (reparse-symbol function_parameters) [5512 5517]))                          
                        :documentation "
    serialize message with numpy array types into buffer
    :param buff: buffer, ``StringIO``
    :param numpy: numpy python module
    ")
                        (reparse-symbol indented_block_body) [5480 5964])
                    ("deserialize_numpy" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [5989 5993])
                            ("str" variable nil (reparse-symbol function_parameters) [5995 5998])
                            ("numpy" variable nil (reparse-symbol function_parameters) [6000 6005]))                          
                        :documentation "
    unpack serialized message in str into this message instance using numpy for array types
    :param str: byte array of serialized message, ``str``
    :param numpy: numpy python module
    ")
                        (reparse-symbol indented_block_body) [5967 6441]))                  
                :type "class")
                nil [3511 6441])
            ("_struct_I" variable nil nil [6442 6468])
            ("_struct_q" variable nil nil [6469 6500])
            ("AddTwoInts" type
               (:superclasses ("object")
                :members 
                  ( ("_type" variable nil (reparse-symbol indented_block_body) [6529 6577])
                    ("_md5sum" variable nil (reparse-symbol indented_block_body) [6580 6624])
                    ("_request_class" variable nil (reparse-symbol indented_block_body) [6627 6662])
                    ("_response_class" variable nil (reparse-symbol indented_block_body) [6665 6701]))                  
                :type "class")
                nil [6501 6702]))          
      :file "_AddTwoInts.py"
      :pointmax 6702
      :fsize 6701
      :lastmodtime '(21746 57321 716258 849000)
      :unmatched-syntax '((INDENT_BLOCK 6369 . 6441) (NEWLINE 6368 . 6369) (COLON 6367 . 6368) (TRY 6216 . 6219) (AS 6363 . 6365) (COLON 5871 . 5872) (AS 5866 . 5868) (EXCEPT 5849 . 5855) (COLON 5750 . 5751) (TRY 5673 . 5676) (AS 5745 . 5747) (INDENT_BLOCK 5404 . 5476) (NEWLINE 5403 . 5404) (COLON 5402 . 5403) (TRY 5251 . 5254) (AS 5398 . 5400) (COLON 4985 . 4986) (AS 4980 . 4982) (EXCEPT 4963 . 4969) (COLON 4864 . 4865) (TRY 4787 . 4790) (AS 4859 . 4861) (NAME 3425 . 3432) (IF 3440 . 3442) (ELSE 3471 . 3475) (INDENT_BLOCK 3190 . 3262) (NEWLINE 3189 . 3190) (COLON 3188 . 3189) (TRY 3017 . 3020) (AS 3184 . 3186) (COLON 2672 . 2673) (AS 2667 . 2669) (EXCEPT 2650 . 2656) (COLON 2551 . 2552) (TRY 2455 . 2458) (AS 2546 . 2548) (INDENT_BLOCK 2186 . 2258) (NEWLINE 2185 . 2186) (COLON 2184 . 2185) (TRY 2013 . 2016) (AS 2180 . 2182) (COLON 1747 . 1748) (AS 1742 . 1744) (EXCEPT 1725 . 1731) (COLON 1626 . 1627) (TRY 1530 . 1533) (AS 1621 . 1623) (NAME 101 . 108) (IF 116 . 118) (ELSE 147 . 151) (NAME 3425 . 3432) (IF 3440 . 3442) (ELSE 3471 . 3475) (INDENT_BLOCK 3190 . 3262) (NEWLINE 3189 . 3190) (COLON 3188 . 3189) (TRY 3017 . 3020) (AS 3184 . 3186) (COLON 2672 . 2673) (AS 2667 . 2669) (EXCEPT 2650 . 2656) (COLON 2551 . 2552) (TRY 2455 . 2458) (AS 2546 . 2548) (INDENT_BLOCK 2186 . 2258) (NEWLINE 2185 . 2186) (COLON 2184 . 2185) (TRY 2013 . 2016) (AS 2180 . 2182) (COLON 1747 . 1748) (AS 1742 . 1744) (EXCEPT 1725 . 1731) (COLON 1626 . 1627) (TRY 1530 . 1533) (AS 1621 . 1623) (NAME 101 . 108) (IF 116 . 118) (ELSE 147 . 151) (COLON 4985 . 4986) (AS 4980 . 4982) (EXCEPT 4963 . 4969) (COLON 4864 . 4865) (TRY 4787 . 4790) (AS 4859 . 4861) (NAME 3425 . 3432) (IF 3440 . 3442) (ELSE 3471 . 3475) (INDENT_BLOCK 3190 . 3262) (NEWLINE 3189 . 3190) (COLON 3188 . 3189) (TRY 3017 . 3020) (AS 3184 . 3186) (COLON 2672 . 2673) (AS 2667 . 2669) (EXCEPT 2650 . 2656) (COLON 2551 . 2552) (TRY 2455 . 2458) (AS 2546 . 2548) (INDENT_BLOCK 2186 . 2258) (NEWLINE 2185 . 2186) (COLON 2184 . 2185) (TRY 2013 . 2016) (AS 2180 . 2182) (COLON 1747 . 1748) (AS 1742 . 1744) (EXCEPT 1725 . 1731) (COLON 1626 . 1627) (TRY 1530 . 1533) (AS 1621 . 1623) (NAME 101 . 108) (IF 116 . 118) (ELSE 147 . 151) (NAME 3425 . 3432) (IF 3440 . 3442) (ELSE 3471 . 3475) (INDENT_BLOCK 3190 . 3262) (NEWLINE 3189 . 3190) (COLON 3188 . 3189) (TRY 3017 . 3020) (AS 3184 . 3186) (COLON 2672 . 2673) (AS 2667 . 2669) (EXCEPT 2650 . 2656) (COLON 2551 . 2552) (TRY 2455 . 2458) (AS 2546 . 2548) (INDENT_BLOCK 2186 . 2258) (NEWLINE 2185 . 2186) (COLON 2184 . 2185) (TRY 2013 . 2016) (AS 2180 . 2182) (COLON 1747 . 1748) (AS 1742 . 1744) (EXCEPT 1725 . 1731) (COLON 1626 . 1627) (TRY 1530 . 1533) (AS 1621 . 1623) (NAME 101 . 108) (IF 116 . 118) (ELSE 147 . 151) (NAME 3425 . 3432) (IF 3440 . 3442) (ELSE 3471 . 3475) (INDENT_BLOCK 3190 . 3262) (NEWLINE 3189 . 3190) (COLON 3188 . 3189) (TRY 3017 . 3020) (AS 3184 . 3186) (COLON 2672 . 2673) (AS 2667 . 2669) (EXCEPT 2650 . 2656) (COLON 2551 . 2552) (TRY 2455 . 2458) (AS 2546 . 2548) (INDENT_BLOCK 2186 . 2258) (NEWLINE 2185 . 2186) (COLON 2184 . 2185) (TRY 2013 . 2016) (AS 2180 . 2182) (COLON 1747 . 1748) (AS 1742 . 1744) (EXCEPT 1725 . 1731) (COLON 1626 . 1627) (TRY 1530 . 1533) (AS 1621 . 1623) (NAME 101 . 108) (IF 116 . 118) (ELSE 147 . 151) (NAME 3425 . 3432) (IF 3440 . 3442) (ELSE 3471 . 3475) (INDENT_BLOCK 3190 . 3262) (NEWLINE 3189 . 3190) (COLON 3188 . 3189) (TRY 3017 . 3020) (AS 3184 . 3186) (COLON 2672 . 2673) (AS 2667 . 2669) (EXCEPT 2650 . 2656) (COLON 2551 . 2552) (TRY 2455 . 2458) (AS 2546 . 2548) (INDENT_BLOCK 2186 . 2258) (NEWLINE 2185 . 2186) (COLON 2184 . 2185) (TRY 2013 . 2016) (AS 2180 . 2182) (COLON 1747 . 1748) (AS 1742 . 1744) (EXCEPT 1725 . 1731) (COLON 1626 . 1627) (TRY 1530 . 1533) (AS 1621 . 1623) (NAME 101 . 108) (IF 116 . 118) (ELSE 147 . 151) (COLON 4985 . 4986) (AS 4980 . 4982) (EXCEPT 4963 . 4969) (COLON 4864 . 4865) (TRY 4787 . 4790) (AS 4859 . 4861) (NAME 3425 . 3432) (IF 3440 . 3442) (ELSE 3471 . 3475) (INDENT_BLOCK 3190 . 3262) (NEWLINE 3189 . 3190) (COLON 3188 . 3189) (TRY 3017 . 3020) (AS 3184 . 3186) (COLON 2672 . 2673) (AS 2667 . 2669) (EXCEPT 2650 . 2656) (COLON 2551 . 2552) (TRY 2455 . 2458) (AS 2546 . 2548) (INDENT_BLOCK 2186 . 2258) (NEWLINE 2185 . 2186) (COLON 2184 . 2185) (TRY 2013 . 2016) (AS 2180 . 2182) (COLON 1747 . 1748) (AS 1742 . 1744) (EXCEPT 1725 . 1731) (COLON 1626 . 1627) (TRY 1530 . 1533) (AS 1621 . 1623) (NAME 101 . 108) (IF 116 . 118) (ELSE 147 . 151) (COLON 4985 . 4986) (AS 4980 . 4982) (EXCEPT 4963 . 4969) (COLON 4864 . 4865) (TRY 4787 . 4790) (AS 4859 . 4861) (NAME 3425 . 3432) (IF 3440 . 3442) (ELSE 3471 . 3475) (INDENT_BLOCK 3190 . 3262) (NEWLINE 3189 . 3190) (COLON 3188 . 3189) (TRY 3017 . 3020) (AS 3184 . 3186) (COLON 2672 . 2673) (AS 2667 . 2669) (EXCEPT 2650 . 2656) (COLON 2551 . 2552) (TRY 2455 . 2458) (AS 2546 . 2548) (INDENT_BLOCK 2186 . 2258) (NEWLINE 2185 . 2186) (COLON 2184 . 2185) (TRY 2013 . 2016) (AS 2180 . 2182) (COLON 1747 . 1748) (AS 1742 . 1744) (EXCEPT 1725 . 1731) (COLON 1626 . 1627) (TRY 1530 . 1533) (AS 1621 . 1623) (NAME 101 . 108) (IF 116 . 118) (ELSE 147 . 151) (COLON 4985 . 4986) (AS 4980 . 4982) (EXCEPT 4963 . 4969) (COLON 4864 . 4865) (TRY 4787 . 4790) (AS 4859 . 4861) (NAME 3425 . 3432) (IF 3440 . 3442) (ELSE 3471 . 3475) (INDENT_BLOCK 3190 . 3262) (NEWLINE 3189 . 3190) (COLON 3188 . 3189) (TRY 3017 . 3020) (AS 3184 . 3186) (COLON 2672 . 2673) (AS 2667 . 2669) (EXCEPT 2650 . 2656) (COLON 2551 . 2552) (TRY 2455 . 2458) (AS 2546 . 2548) (INDENT_BLOCK 2186 . 2258) (NEWLINE 2185 . 2186) (COLON 2184 . 2185) (TRY 2013 . 2016) (AS 2180 . 2182) (COLON 1747 . 1748) (AS 1742 . 1744) (EXCEPT 1725 . 1731) (COLON 1626 . 1627) (TRY 1530 . 1533) (AS 1621 . 1623) (NAME 101 . 108) (IF 116 . 118) (ELSE 147 . 151) (NAME 3425 . 3432) (IF 3440 . 3442) (ELSE 3471 . 3475) (INDENT_BLOCK 3190 . 3262) (NEWLINE 3189 . 3190) (COLON 3188 . 3189) (TRY 3017 . 3020) (AS 3184 . 3186) (COLON 2672 . 2673) (AS 2667 . 2669) (EXCEPT 2650 . 2656) (COLON 2551 . 2552) (TRY 2455 . 2458) (AS 2546 . 2548) (INDENT_BLOCK 2186 . 2258) (NEWLINE 2185 . 2186) (COLON 2184 . 2185) (TRY 2013 . 2016) (AS 2180 . 2182) (COLON 1747 . 1748) (AS 1742 . 1744) (EXCEPT 1725 . 1731) (COLON 1626 . 1627) (TRY 1530 . 1533) (AS 1621 . 1623) (NAME 101 . 108) (IF 116 . 118) (ELSE 147 . 151) (COLON 4985 . 4986) (AS 4980 . 4982) (EXCEPT 4963 . 4969) (COLON 4864 . 4865) (TRY 4787 . 4790) (AS 4859 . 4861) (NAME 3425 . 3432) (IF 3440 . 3442) (ELSE 3471 . 3475) (INDENT_BLOCK 3190 . 3262) (NEWLINE 3189 . 3190) (COLON 3188 . 3189) (TRY 3017 . 3020) (AS 3184 . 3186) (COLON 2672 . 2673) (AS 2667 . 2669) (EXCEPT 2650 . 2656) (COLON 2551 . 2552) (TRY 2455 . 2458) (AS 2546 . 2548) (INDENT_BLOCK 2186 . 2258) (NEWLINE 2185 . 2186) (COLON 2184 . 2185) (TRY 2013 . 2016) (AS 2180 . 2182) (COLON 1747 . 1748) (AS 1742 . 1744) (EXCEPT 1725 . 1731) (COLON 1626 . 1627) (TRY 1530 . 1533) (AS 1621 . 1623) (NAME 101 . 108) (IF 116 . 118) (ELSE 147 . 151) (COLON 4985 . 4986) (AS 4980 . 4982) (EXCEPT 4963 . 4969) (COLON 4864 . 4865) (TRY 4787 . 4790) (AS 4859 . 4861) (NAME 3425 . 3432) (IF 3440 . 3442) (ELSE 3471 . 3475) (INDENT_BLOCK 3190 . 3262) (NEWLINE 3189 . 3190) (COLON 3188 . 3189) (TRY 3017 . 3020) (AS 3184 . 3186) (COLON 2672 . 2673) (AS 2667 . 2669) (EXCEPT 2650 . 2656) (COLON 2551 . 2552) (TRY 2455 . 2458) (AS 2546 . 2548) (INDENT_BLOCK 2186 . 2258) (NEWLINE 2185 . 2186) (COLON 2184 . 2185) (TRY 2013 . 2016) (AS 2180 . 2182) (COLON 1747 . 1748) (AS 1742 . 1744) (EXCEPT 1725 . 1731) (COLON 1626 . 1627) (TRY 1530 . 1533) (AS 1621 . 1623) (NAME 101 . 108) (IF 116 . 118) (ELSE 147 . 151) (NAME 3425 . 3432) (IF 3440 . 3442) (ELSE 3471 . 3475) (INDENT_BLOCK 3190 . 3262) (NEWLINE 3189 . 3190) (COLON 3188 . 3189) (TRY 3017 . 3020) (AS 3184 . 3186) (COLON 2672 . 2673) (AS 2667 . 2669) (EXCEPT 2650 . 2656) (COLON 2551 . 2552) (TRY 2455 . 2458) (AS 2546 . 2548) (INDENT_BLOCK 2186 . 2258) (NEWLINE 2185 . 2186) (COLON 2184 . 2185) (TRY 2013 . 2016) (AS 2180 . 2182) (COLON 1747 . 1748) (AS 1742 . 1744) (EXCEPT 1725 . 1731) (COLON 1626 . 1627) (TRY 1530 . 1533) (AS 1621 . 1623) (NAME 101 . 108) (IF 116 . 118) (ELSE 147 . 151) (COLON 5871 . 5872) (AS 5866 . 5868) (EXCEPT 5849 . 5855) (COLON 5750 . 5751) (TRY 5673 . 5676) (AS 5745 . 5747) (INDENT_BLOCK 5404 . 5476) (NEWLINE 5403 . 5404) (COLON 5402 . 5403) (TRY 5251 . 5254) (AS 5398 . 5400) (COLON 4985 . 4986) (AS 4980 . 4982) (EXCEPT 4963 . 4969) (COLON 4864 . 4865) (TRY 4787 . 4790) (AS 4859 . 4861) (NAME 3425 . 3432) (IF 3440 . 3442) (ELSE 3471 . 3475) (INDENT_BLOCK 3190 . 3262) (NEWLINE 3189 . 3190) (COLON 3188 . 3189) (TRY 3017 . 3020) (AS 3184 . 3186) (COLON 2672 . 2673) (AS 2667 . 2669) (EXCEPT 2650 . 2656) (COLON 2551 . 2552) (TRY 2455 . 2458) (AS 2546 . 2548) (INDENT_BLOCK 2186 . 2258) (NEWLINE 2185 . 2186) (COLON 2184 . 2185) (TRY 2013 . 2016) (AS 2180 . 2182) (COLON 1747 . 1748) (AS 1742 . 1744) (EXCEPT 1725 . 1731) (COLON 1626 . 1627) (TRY 1530 . 1533) (AS 1621 . 1623) (NAME 101 . 108) (IF 116 . 118) (ELSE 147 . 151))))
  :file "!home!krishneel!catkin_ws!devel!lib!python2.7!dist-packages!beginner_tutorials!srv!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
