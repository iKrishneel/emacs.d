;; Object semanticdb-project-database-file
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "semanticdb-project-database-file"
  :tables
  (list
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_PARAMETERS_031014_HPP" variable (:constant-flag t) nil [285 312])
            ("boost/detail/is_xxx.hpp" include (:system-flag t) nil [314 348])
            ("boost/type_traits/is_const.hpp" include (:system-flag t) nil [350 391])
            ("boost/mpl/lambda.hpp" include (:system-flag t) nil [393 424])
            ("boost/mpl/apply.hpp" include (:system-flag t) nil [425 455])
            ("boost/mpl/always.hpp" include (:system-flag t) nil [456 487])
            ("boost/mpl/and.hpp" include (:system-flag t) nil [488 516])
            ("boost/mpl/or.hpp" include (:system-flag t) nil [517 544])
            ("boost/mpl/if.hpp" include (:system-flag t) nil [545 572])
            ("boost/mpl/identity.hpp" include (:system-flag t) nil [573 606])
            ("boost/mpl/not.hpp" include (:system-flag t) nil [607 635])
            ("boost/mpl/eval_if.hpp" include (:system-flag t) nil [636 668])
            ("boost/mpl/pair.hpp" include (:system-flag t) nil [669 698])
            ("boost/type_traits/is_same.hpp" include (:system-flag t) nil [700 740])
            ("boost/type_traits/remove_reference.hpp" include (:system-flag t) nil [741 790])
            ("boost/preprocessor/repetition/enum.hpp" include (:system-flag t) nil [792 841])
            ("boost/preprocessor/repetition/enum_params.hpp" include (:system-flag t) nil [842 898])
            ("boost/preprocessor/repetition/enum_trailing_params.hpp" include (:system-flag t) nil [899 964])
            ("boost/preprocessor/arithmetic/sub.hpp" include (:system-flag t) nil [965 1013])
            ("boost/preprocessor/repetition/repeat.hpp" include (:system-flag t) nil [1014 1065])
            ("boost/preprocessor/repetition/enum_shifted.hpp" include (:system-flag t) nil [1066 1123])
            ("boost/preprocessor/repetition/enum_binary_params.hpp" include (:system-flag t) nil [1124 1187])
            ("boost/preprocessor/repetition/enum_shifted_params.hpp" include (:system-flag t) nil [1188 1252])
            ("boost/preprocessor/seq/elem.hpp" include (:system-flag t) nil [1253 1295])
            ("boost/preprocessor/iteration/iterate.hpp" include (:system-flag t) nil [1296 1347])
            ("boost/preprocessor/facilities/intercept.hpp" include (:system-flag t) nil [1348 1402])
            ("boost/preprocessor/cat.hpp" include (:system-flag t) nil [1403 1440])
            ("boost/parameter/aux_/arg_list.hpp" include (:system-flag t) nil [1442 1486])
            ("boost/parameter/aux_/yesno.hpp" include (:system-flag t) nil [1487 1528])
            ("boost/parameter/aux_/void.hpp" include (:system-flag t) nil [1529 1569])
            ("boost/parameter/aux_/default.hpp" include (:system-flag t) nil [1570 1613])
            ("boost/parameter/aux_/unwrap_cv_reference.hpp" include (:system-flag t) nil [1614 1669])
            ("boost/parameter/aux_/tagged_argument.hpp" include (:system-flag t) nil [1670 1721])
            ("boost/parameter/aux_/tag.hpp" include (:system-flag t) nil [1722 1761])
            ("boost/parameter/aux_/template_keyword.hpp" include (:system-flag t) nil [1762 1814])
            ("boost/parameter/aux_/set.hpp" include (:system-flag t) nil [1815 1854])
            ("boost/parameter/config.hpp" include (:system-flag t) nil [1855 1892])
            ("parameter_" type
               (:members 
                  ( ("unmatched_argument" type
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type "struct"
                        :members 
                          ( ("BOOST_MPL_ASSERT" function
                               (:prototype-flag t
                                :type "int")
                                (reparse-symbol classsubparts) [1976 2019])
                            ("type" type
                               (:typedef ("int")
                                :type "typedef")
                                (reparse-symbol classsubparts) [2026 2043]))                          )
                        (reparse-symbol namespacesubparts) [1919 2048]))                  
                :type "namespace")
                nil [1894 2051])
            ("boost" type
               (:members 
                  ( ("reference_wrapper" type
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type "class"
                        :prototype t)
                        (reparse-symbol namespacesubparts) [2096 2138])
                    ("parameter" type
                       (:members 
                          ( ("aux" type
                               (:members 
                                  ( ("use_default" type (:type "struct") (reparse-symbol namespacesubparts) [2179 2201]))                                  
                                :type "namespace")
                                (reparse-symbol namespacesubparts) [2163 2203])
                            ("required" type
                               (:members 
                                  ( ("key_type" type
                                       (:typedef ("Tag" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [3056 3077])
                                    ("predicate" type
                                       (:typedef ("Predicate" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [3082 3110]))                                  
                                :type "struct")
                                (reparse-symbol namespacesubparts) [3034 3113])
                            ("optional" type
                               (:members 
                                  ( ("key_type" type
                                       (:typedef ("Tag" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [3194 3215])
                                    ("predicate" type
                                       (:typedef ("Predicate" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [3220 3248]))                                  
                                :type "struct")
                                (reparse-symbol namespacesubparts) [3172 3251])
                            ("deduced" type
                               (:template 
                                  ( ("Tag" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("key_type" type
                                       (:typedef ("Tag" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [3295 3316]))                                  )
                                (reparse-symbol namespacesubparts) [3253 3319])
                            ("aux" type
                               (:members 
                                  ( ("type" variable (:type "int") (reparse-symbol namespacesubparts) [3730 3740])
                                    ("is_deduced" type
                                       (:template 
                                          ( ("S" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :superclasses 
                                          ( ("mpl::eval_if::type" type
                                               (:protection "unspecified"
                                                :type "class")
                                                nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [3744 3946])
                                    ("get_tag_type0" type
                                       (:template 
                                          ( ("T" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("type" type
                                               (:typedef ("T::key_type" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [4434 4468]))                                          )
                                        (reparse-symbol namespacesubparts) [4382 4473])
                                    ("tag_type" type
                                       (:template 
                                          ( ("T" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :superclasses 
                                          ( ("mpl::eval_if" type
                                               (:protection "unspecified"
                                                :type "class")
                                                nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [4694 4907])
                                    ("has_default" type
                                       (:template 
                                          ( ("T" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :superclasses 
                                          ( ("mpl::not_" type
                                               (:protection "unspecified"
                                                :type "class")
                                                nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [4911 4989])
                                    ("get_predicate_or_default" type
                                       (:template 
                                          ( ("T" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("type" type
                                               (:typedef ("T" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [5098 5113]))                                          )
                                        (reparse-symbol namespacesubparts) [5035 5118])
                                    ("get_predicate_or_default" type
                                       (:type "struct"
                                        :members 
                                          ( ("type" type
                                               (:typedef ("mpl::always" type
                                                     (:template-specifier 
                                                        ( ("mpl::true_" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [5191 5228]))                                          
                                        :template-specifier 
                                          ( ("use_default" type nil nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [5122 5233])
                                    ("get_predicate" type
                                       (:template 
                                          ( ("T" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("type" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [5403 5419]))                                          )
                                        (reparse-symbol namespacesubparts) [5275 5424])
                                    ("predicate" type
                                       (:template 
                                          ( ("T" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :superclasses 
                                          ( ("mpl::eval_if" type
                                               (:protection "unspecified"
                                                :type "class")
                                                nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [5428 5668])
                                    ("as_parameter_requirements" type
                                       (:template 
                                          ( ("ParameterSpec" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("type" variable (:type "int") (reparse-symbol classsubparts) [6188 6193]))                                          )
                                        (reparse-symbol namespacesubparts) [5921 6198])
                                    ("is_named_argument" type
                                       (:template 
                                          ( ("T" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :superclasses 
                                          ( ("mpl::or_" type
                                               (:protection "unspecified"
                                                :type "class")
                                                nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [6202 6342])
                                    ("satisfies" type
                                       (:template 
                                          ( ("ArgList" type (:type "class") nil nil)
                                            ("ParameterRequirements" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("BOOST_STATIC_CONSTANT" function
                                               (:prototype-flag t
                                                :arguments 
                                                  ( ("" variable (:type "bool") (reparse-symbol arg-sub-list) [7241 7246])
                                                    ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7247 7459]))                                                  
                                                :type "int")
                                                (reparse-symbol classsubparts) [7208 7468])
                                            ("type" type
                                               (:typedef ("mpl::bool_" type
                                                     (:template-specifier 
                                                        ( ("satisfies::value" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [7476 7518]))                                          )
                                        (reparse-symbol namespacesubparts) [6439 7530])
                                    ("tag_deduced" type
                                       (:template 
                                          ( ("UsedArgs" type (:type "class") nil nil)
                                            ("Spec" type (:type "class") nil nil)
                                            ("Arg" type (:type "class") nil nil)
                                            ("TagFn" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("type" variable (:type "int") (reparse-symbol classsubparts) [8291 8296]))                                          )
                                        (reparse-symbol namespacesubparts) [8007 8301])
                                    ("deduce_tag" type
                                       (:template 
                                          ( ("Argument" type (:type "class") nil nil)
                                            ("ArgumentPack" type (:type "class") nil nil)
                                            ("DeducedArgs" type (:type "class") nil nil)
                                            ("UsedArgs" type (:type "class") nil nil)
                                            ("TagFn" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :prototype t)
                                        (reparse-symbol namespacesubparts) [8305 8449])
                                    ("lambda_tag" type
                                       (:prototype t
                                        :type "struct")
                                        (reparse-symbol namespacesubparts) [8489 8507])
                                    ("deduce_tag0" type
                                       (:template 
                                          ( ("Argument" type (:type "class") nil nil)
                                            ("ArgumentPack" type (:type "class") nil nil)
                                            ("DeducedArgs" type (:type "class") nil nil)
                                            ("UsedArgs" type (:type "class") nil nil)
                                            ("TagFn" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("spec" type
                                               (:typedef ("DeducedArgs::spec" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [8702 8742])
                                            ("condition" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [8937 8952])
                                            ("BOOST_MPL_ASSERT" function
                                               (:prototype-flag t
                                                :type "int")
                                                (reparse-symbol classsubparts) [9015 9181])
                                            ("type" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [9394 9404]))                                          )
                                        (reparse-symbol namespacesubparts) [8547 9409])
                                    ("deduce_tag" type
                                       (:template 
                                          ( ("Argument" type (:type "class") nil nil)
                                            ("ArgumentPack" type (:type "class") nil nil)
                                            ("DeducedArgs" type (:type "class") nil nil)
                                            ("UsedArgs" type (:type "class") nil nil)
                                            ("TagFn" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("type" type
                                               (:typedef ("mpl::eval_if::type" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [10195 10396]))                                          )
                                        (reparse-symbol namespacesubparts) [10041 10401])
                                    ("make_arg_list_aux" type
                                       (:template 
                                          ( ("List" type (:type "class") nil nil)
                                            ("DeducedArgs" type (:type "class") nil nil)
                                            ("TagFn" type (:type "class") nil nil)
                                            ("Positional" type (:type "class") nil nil)
                                            ("UsedArgs" type (:type "class") nil nil)
                                            ("ArgumentPack" type (:type "class") nil nil)
                                            ("Error" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :prototype t)
                                        (reparse-symbol namespacesubparts) [10405 10593])
                                    ("insert_tagged" type
                                       (:template 
                                          ( ("UsedArgs" type (:type "class") nil nil)
                                            ("Tagged" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("type" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [10869 10879]))                                          )
                                        (reparse-symbol namespacesubparts) [10710 10884])
                                    ("make_arg_list0" type
                                       (:template 
                                          ( ("List" type (:type "class") nil nil)
                                            ("DeducedArgs" type (:type "class") nil nil)
                                            ("TagFn" type (:type "class") nil nil)
                                            ("Positional" type (:type "class") nil nil)
                                            ("UsedArgs" type (:type "class") nil nil)
                                            ("ArgumentPack" type (:type "class") nil nil)
                                            ("Error" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("argument" type
                                               (:typedef ("List::arg" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [11481 11517])
                                            ("parameter_spec" type
                                               (:typedef ("List::spec" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [11531 11574])
                                            ("tag_" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [11624 11634])
                                            ("is_tagged" type
                                               (:typedef ("is_named_argument" type
                                                     (:template-specifier 
                                                        ( ("argument" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [11642 11688])
                                            ("positional" type
                                               (:typedef ("mpl::and_" type
                                                     (:template-specifier 
                                                        ( ("mpl::not_" type (:template-specifier 
                                                            ( ("mpl::or_" type (:template-specifier 
                                                                ( ("is_deduced" type (:template-specifier 
                                                                    ( ("parameter_spec" type nil nil nil))                                                                    ) nil nil)
                                                                  ("is_tagged" type nil nil nil))                                                                ) nil nil))                                                            ) nil nil)
                                                          ("Positional" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [11816 11972])
                                            ("used_args" type
                                               (:typedef ("mpl::eval_if::type" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [12237 12390])
                                            ("deduced_data" type
                                               (:typedef ("mpl::eval_if::type" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [12548 12762])
                                            ("tagged" type
                                               (:typedef ("mpl::eval_if::type" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [12820 13285])
                                            ("error" type
                                               (:typedef ("mpl::if_::type" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [13380 13600])
                                            ("argument_pack" type
                                               (:typedef ("mpl::if_::type" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [13608 13760])
                                            ("type" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [13982 13992]))                                          )
                                        (reparse-symbol namespacesubparts) [11042 13997])
                                    ("make_arg_list_aux" type
                                       (:template 
                                          ( ("List" type (:type "class") nil nil)
                                            ("DeducedArgs" type (:type "class") nil nil)
                                            ("TagFn" type (:type "class") nil nil)
                                            ("Positional" type (:type "class") nil nil)
                                            ("DeducedSet" type (:type "class") nil nil)
                                            ("ArgumentPack" type (:type "class") nil nil)
                                            ("Error" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("type" type
                                               (:typedef ("mpl::eval_if::type" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [15877 16111]))                                          )
                                        (reparse-symbol namespacesubparts) [15677 16116])
                                    ("make_arg_list" type
                                       (:members 
                                          ( ("type" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [16520 16530]))                                          
                                        :type "struct")
                                        (reparse-symbol namespacesubparts) [16363 16535])
                                    ("item" type
                                       (:template 
                                          ( ("Spec" type (:type "class") nil nil)
                                            ("Arg" type (:type "class") nil nil)
                                            ("Tail" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("spec" type
                                               (:typedef ("Spec" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [16653 16671])
                                            ("arg" type
                                               (:typedef ("Arg" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [16788 16804])
                                            ("tail" type
                                               (:typedef ("Tail" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [16811 16829]))                                          )
                                        (reparse-symbol namespacesubparts) [16576 16834])
                                    ("make_item" type
                                       (:template 
                                          ( ("Spec" type (:type "class") nil nil)
                                            ("Arg" type (:type "class") nil nil)
                                            ("Tail" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("type" variable (:type "int") (reparse-symbol classsubparts) [16957 16962]))                                          )
                                        (reparse-symbol namespacesubparts) [16838 16967])
                                    ("make_items" type
                                       (:template 
                                          ( ("Spec" type (:type "class") nil nil)
                                            ("Arg" type (:type "class") nil nil)
                                            ("Tail" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("type" type
                                               (:typedef ("mpl::eval_if::type" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [17076 17224]))                                          )
                                        (reparse-symbol namespacesubparts) [17001 17229])
                                    ("deduced_item" type
                                       (:template 
                                          ( ("ParameterSpec" type (:type "class") nil nil)
                                            ("Tail" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("spec" type
                                               (:typedef ("ParameterSpec" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [17369 17396])
                                            ("tail" type
                                               (:typedef ("Tail" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [17403 17421]))                                          )
                                        (reparse-symbol namespacesubparts) [17286 17426])
                                    ("make_deduced_item" type
                                       (:template 
                                          ( ("Spec" type (:type "class") nil nil)
                                            ("Tail" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("type" variable (:type "int") (reparse-symbol classsubparts) [17601 17606]))                                          )
                                        (reparse-symbol namespacesubparts) [17482 17611])
                                    ("make_deduced_items" type
                                       (:template 
                                          ( ("Spec" type (:type "class") nil nil)
                                            ("Tail" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("type" type
                                               (:typedef ("mpl::eval_if::type" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [17687 17929]))                                          )
                                        (reparse-symbol namespacesubparts) [17615 17934])
                                    ("BOOST_PARAMETER_make_arg_list" variable (:constant-flag t) (reparse-symbol namespacesubparts) [18165 18194])
                                    ("BOOST_PARAMETER_right_angle" variable (:constant-flag t) (reparse-symbol namespacesubparts) [18396 18423])
                                    ("BOOST_PARAMETER_build_arg_list" variable (:constant-flag t) (reparse-symbol namespacesubparts) [18447 18477])
                                    ("BOOST_PARAMETER_make_deduced_list" variable (:constant-flag t) (reparse-symbol namespacesubparts) [18845 18878])
                                    ("BOOST_PARAMETER_build_deduced_list" variable (:constant-flag t) (reparse-symbol namespacesubparts) [19017 19051])
                                    ("tag_keyword_arg" type
                                       (:members 
                                          ( ("apply" type
                                               (:template 
                                                  ( ("K" type (:type "class") nil nil)
                                                    ("T" type (:type "class") nil nil))                                                  
                                                :type "struct"
                                                :superclasses 
                                                  ( ("tag" type
                                                       (:protection "unspecified"
                                                        :type "class")
                                                        nil nil))                                                  )
                                                (reparse-symbol classsubparts) [19442 19517]))                                          
                                        :type "struct")
                                        (reparse-symbol namespacesubparts) [19409 19522])
                                    ("tag_template_keyword_arg" type
                                       (:members 
                                          ( ("apply" type
                                               (:template 
                                                  ( ("K" type (:type "class") nil nil)
                                                    ("T" type (:type "class") nil nil))                                                  
                                                :type "struct"
                                                :members 
                                                  ( ("type" type
                                                       (:typedef ("template_keyword" type
                                                             (:template-specifier 
                                                                ( ("K" type nil nil nil)
                                                                  ("T" type nil nil nil))                                                                
                                                              :type "class")
                                                              nil nil)
                                                        :type "typedef")
                                                        (reparse-symbol classsubparts) [19633 19668]))                                                  )
                                                (reparse-symbol classsubparts) [19568 19677]))                                          
                                        :type "struct")
                                        (reparse-symbol namespacesubparts) [19526 19682]))                                  
                                :type "namespace")
                                (reparse-symbol namespacesubparts) [3321 19685])
                            ("BOOST_PARAMETER_FORWARD_TYPEDEF" variable (:constant-flag t) (reparse-symbol namespacesubparts) [19712 19743])
                            ("BOOST_PARAMETER_FORWARD_TYPEDEFS" variable (:constant-flag t) (reparse-symbol namespacesubparts) [19867 19899])
                            ("BOOST_PARAMETER_TEMPLATE_ARGS" variable (:constant-flag t) (reparse-symbol namespacesubparts) [19995 20024])
                            ("parameters" type
                               (:members 
                                  ( ("deduced_list" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [20372 20390])
                                    ("BOOST_PARAMETER_satisfies" variable (:constant-flag t) (reparse-symbol classsubparts) [21208 21233])
                                    ("type" variable (:type "int") (reparse-symbol classsubparts) [23168 23180])
                                    ("bind" type
                                       (:members 
                                          ( ("result" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [24244 24256])
                                            ("type" type
                                               (:typedef ("mpl::first::type" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [24266 24313]))                                          
                                        :type "struct")
                                        (reparse-symbol classsubparts) [23964 24320])
                                    ("()" function
                                       (:methodconst-flag t
                                        :operator-flag t
                                        :type ("aux::empty_arg_list" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [24778 24865])
                                    ("()" function
                                       (:methodconst-flag t
                                        :operator-flag t
                                        :arguments 
                                          ( ("a0" variable
                                               (:reference 1
                                                :type ("A0" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [25113 25120]))                                          
                                        :type ("type" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [25093 25726])
                                    ("()" function
                                       (:methodconst-flag t
                                        :operator-flag t
                                        :arguments 
                                          ( ("a0" variable
                                               (:reference 1
                                                :type ("A0" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [26056 26063])
                                            ("a1" variable
                                               (:reference 1
                                                :type ("A1" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [26064 26071]))                                          
                                        :type ("type" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [26036 26743])
                                    ("BOOST_PP_ITERATION_PARAMS_1" variable (:constant-flag t) (reparse-symbol classsubparts) [26807 26834]))                                  
                                :type "struct")
                                (reparse-symbol namespacesubparts) [20187 26955]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [2140 26958]))                  
                :type "namespace")
                nil [2077 26984]))          
      :file "parameters.hpp"
      :pointmax 27044
      :fsize 27043
      :lastmodtime '(20225 54169 0 0)
      :unmatched-syntax '((semantic-list 26949 . 26951) (symbol 26933 . 26949) (symbol 26925 . 26932) (punctuation 26924 . 26925) (punctuation 26035 . 26036) (punctuation 26034 . 26035) (punctuation 26033 . 26034) (symbol 26024 . 26028) (punctuation 26023 . 26024) (punctuation 26022 . 26023) (punctuation 26021 . 26022) (symbol 25997 . 26012) (punctuation 25996 . 25997) (punctuation 25995 . 25996) (symbol 25992 . 25995) (punctuation 25990 . 25991) (symbol 25967 . 25979) (punctuation 25965 . 25966) (punctuation 25953 . 25954) (punctuation 25939 . 25940) (symbol 25920 . 25922) (punctuation 25919 . 25920) (symbol 25916 . 25919) (punctuation 25894 . 25895) (symbol 25890 . 25894) (punctuation 25889 . 25890) (punctuation 25888 . 25889) (symbol 25885 . 25888) (punctuation 25883 . 25884) (symbol 25866 . 25868) (punctuation 25865 . 25866) (symbol 25862 . 25865) (punctuation 25844 . 25845) (symbol 25840 . 25844) (punctuation 25839 . 25840) (punctuation 25838 . 25839) (symbol 25835 . 25838) (punctuation 25821 . 25822) (symbol 25808 . 25821) (punctuation 25807 . 25808) (punctuation 25806 . 25807) (symbol 25803 . 25806) (TYPENAME 25794 . 25802) (punctuation 25784 . 25785) (symbol 25779 . 25784) (punctuation 25778 . 25779) (punctuation 25777 . 25778) (symbol 25774 . 25777) (TYPENAME 25765 . 25773) (punctuation 25759 . 25760) (symbol 25757 . 25759) (CLASS 25751 . 25756) (punctuation 25749 . 25750) (symbol 25747 . 25749) (CLASS 25741 . 25746) (punctuation 25740 . 25741) (TEMPLATE 25732 . 25740) (punctuation 25092 . 25093) (punctuation 25091 . 25092) (punctuation 25090 . 25091) (symbol 25081 . 25085) (punctuation 25080 . 25081) (punctuation 25079 . 25080) (punctuation 25078 . 25079) (symbol 25054 . 25069) (punctuation 25053 . 25054) (punctuation 25052 . 25053) (symbol 25049 . 25052) (punctuation 25047 . 25048) (symbol 25024 . 25036) (punctuation 25022 . 25023) (punctuation 25010 . 25011) (symbol 24995 . 24997) (punctuation 24994 . 24995) (symbol 24991 . 24994) (punctuation 24973 . 24974) (symbol 24969 . 24973) (punctuation 24968 . 24969) (punctuation 24967 . 24968) (symbol 24964 . 24967) (punctuation 24950 . 24951) (symbol 24937 . 24950) (punctuation 24936 . 24937) (punctuation 24935 . 24936) (symbol 24932 . 24935) (TYPENAME 24923 . 24931) (punctuation 24913 . 24914) (symbol 24908 . 24913) (punctuation 24907 . 24908) (punctuation 24906 . 24907) (symbol 24903 . 24906) (TYPENAME 24894 . 24902) (punctuation 24888 . 24889) (symbol 24886 . 24888) (CLASS 24880 . 24885) (punctuation 24879 . 24880) (TEMPLATE 24871 . 24879) (semantic-list #("(n, BOOST_PARAMETER_FORWARD_TYPEDEF, (src)(dest))" 0 1 (macros (("dest" symbol "parameter_spec" 24390 . 24404) ("src" symbol "PS" 24386 . 24388) ("n" symbol "BOOST_PARAMETER_MAX_ARITY" 24359 . 24384)))) 24326 . 24405) (symbol "BOOST_PP_REPEAT" 24326 . 24405) (punctuation 24243 . 24244) (punctuation 24242 . 24243) (punctuation 24241 . 24242) (symbol 24208 . 24232) (punctuation 24207 . 24208) (punctuation 24206 . 24207) (symbol 24203 . 24206) (punctuation 24201 . 24202) (symbol 24178 . 24190) (punctuation 24176 . 24177) (symbol 24161 . 24165) (punctuation 24160 . 24161) (punctuation 24159 . 24160) (semantic-list #("(n, BOOST_PARAMETER_right_angle, _)" 0 1 (macros (("argument_type" symbol "PS" 24140 . 24142) ("parameter_spec" symbol "make_items" 24128 . 24138) ("make" symbol "aux" 24123 . 24126) ("n" symbol "BOOST_PARAMETER_MAX_ARITY" 24096 . 24121)))) 24048 . 24159) (symbol "BOOST_PP_REPEAT" 24048 . 24159) (punctuation ">" 24048 . 24159) (symbol "void_" 24048 . 24159) (punctuation "<" 24048 . 24159) (symbol "identity" 24048 . 24159) (punctuation ":" 24048 . 24159) (punctuation ":" 24048 . 24159) (symbol "mpl" 24048 . 24159) (semantic-list #("(                                                                  \\
      n, BOOST_PARAMETER_make_arg_list, (make)(parameter_spec)(argument_type))" 0 1 (macros (("argument_type" symbol "PS" 24140 . 24142) ("parameter_spec" symbol "make_items" 24128 . 24138) ("make" symbol "aux" 24123 . 24126) ("n" symbol "BOOST_PARAMETER_MAX_ARITY" 24096 . 24121)))) 24048 . 24159) (symbol "BOOST_PP_REPEAT" 24048 . 24159) (TYPENAME 24039 . 24047) (punctuation 24025 . 24026) (symbol 24012 . 24025) (punctuation 24011 . 24012) (punctuation 24010 . 24011) (symbol 24007 . 24010) (TYPENAME 23998 . 24006) (TYPEDEF 23990 . 23997) (punctuation 24243 . 24244) (punctuation 24242 . 24243) (punctuation 24241 . 24242) (symbol 24208 . 24232) (punctuation 24207 . 24208) (punctuation 24206 . 24207) (symbol 24203 . 24206) (punctuation 24201 . 24202) (symbol 24178 . 24190) (punctuation 24176 . 24177) (symbol 24161 . 24165) (punctuation 24160 . 24161) (punctuation 24159 . 24160) (semantic-list #("(n, BOOST_PARAMETER_right_angle, _)" 0 1 (macros (("argument_type" symbol "PS" 24140 . 24142) ("parameter_spec" symbol "make_items" 24128 . 24138) ("make" symbol "aux" 24123 . 24126) ("n" symbol "BOOST_PARAMETER_MAX_ARITY" 24096 . 24121)))) 24048 . 24159) (symbol "BOOST_PP_REPEAT" 24048 . 24159) (punctuation ">" 24048 . 24159) (symbol "void_" 24048 . 24159) (punctuation "<" 24048 . 24159) (symbol "identity" 24048 . 24159) (punctuation ":" 24048 . 24159) (punctuation ":" 24048 . 24159) (symbol "mpl" 24048 . 24159) (semantic-list #("(                                                                  \\
      n, BOOST_PARAMETER_make_arg_list, (make)(parameter_spec)(argument_type))" 0 1 (macros (("argument_type" symbol "PS" 24140 . 24142) ("parameter_spec" symbol "make_items" 24128 . 24138) ("make" symbol "aux" 24123 . 24126) ("n" symbol "BOOST_PARAMETER_MAX_ARITY" 24096 . 24121)))) 24048 . 24159) (symbol "BOOST_PP_REPEAT" 24048 . 24159) (TYPENAME 24039 . 24047) (punctuation 24025 . 24026) (symbol 24012 . 24025) (punctuation 24011 . 24012) (punctuation 24010 . 24011) (symbol 24007 . 24010) (TYPENAME 23998 . 24006) (TYPEDEF 23990 . 23997) (punctuation 23958 . 23959) (semantic-list 23848 . 23934) (symbol 23821 . 23848) (punctuation 23898 . 23899) (punctuation 23476 . 23477) (TEMPLATE 23467 . 23475) (punctuation 23167 . 23168) (punctuation 23166 . 23167) (punctuation 23165 . 23166) (symbol 23152 . 23156) (punctuation 23151 . 23152) (punctuation 23150 . 23151) (punctuation 23149 . 23150) (symbol 23091 . 23097) (punctuation 23090 . 23091) (punctuation 23089 . 23090) (symbol 23086 . 23089) (punctuation 23084 . 23085) (symbol 23054 . 23069) (punctuation 23053 . 23054) (punctuation 23052 . 23053) (symbol 23049 . 23052) (punctuation 23047 . 23048) (symbol 23020 . 23032) (punctuation 23018 . 23019) (symbol 22999 . 23003) (punctuation 22998 . 22999) (punctuation 22997 . 22998) (semantic-list #("(n, BOOST_PARAMETER_right_angle, _)" 0 1 (macros (("argument_type" symbol "PS" 22974 . 22976) ("parameter_spec" symbol "make_items" 22962 . 22972) ("make" symbol "aux" 22957 . 22960) ("n" symbol "BOOST_PARAMETER_MAX_ARITY" 22930 . 22955)))) 22878 . 22997) (symbol "BOOST_PP_REPEAT" 22878 . 22997) (punctuation ">" 22878 . 22997) (symbol "void_" 22878 . 22997) (punctuation "<" 22878 . 22997) (symbol "identity" 22878 . 22997) (punctuation ":" 22878 . 22997) (punctuation ":" 22878 . 22997) (symbol "mpl" 22878 . 22997) (semantic-list #("(                                                                  \\
      n, BOOST_PARAMETER_make_arg_list, (make)(parameter_spec)(argument_type))" 0 1 (macros (("argument_type" symbol "PS" 22974 . 22976) ("parameter_spec" symbol "make_items" 22962 . 22972) ("make" symbol "aux" 22957 . 22960) ("n" symbol "BOOST_PARAMETER_MAX_ARITY" 22930 . 22955)))) 22878 . 22997) (symbol "BOOST_PP_REPEAT" 22878 . 22997) (TYPENAME 22869 . 22877) (punctuation 22851 . 22852) (symbol 22838 . 22851) (punctuation 22837 . 22838) (punctuation 22836 . 22837) (symbol 22833 . 22836) (TYPENAME 22824 . 22832) (punctuation 22810 . 22811) (symbol 22800 . 22810) (punctuation 22798 . 22799) (symbol 22694 . 22699) (STRUCT 22687 . 22693) (punctuation 22681 . 22682) (semantic-list 22583 . 22669) (symbol 22556 . 22583) (punctuation 22633 . 22634) (punctuation 22211 . 22212) (TEMPLATE 22203 . 22211) (punctuation 22082 . 22083) (semantic-list 22080 . 22082) (punctuation 22074 . 22075) (symbol 22060 . 22065) (punctuation 22058 . 22059) (punctuation 22046 . 22047) (symbol 22036 . 22046) (punctuation 22035 . 22036) (symbol 22027 . 22035) (punctuation 22026 . 22027) (punctuation 22025 . 22026) (symbol 22022 . 22025) (punctuation 22020 . 22021) (punctuation 21972 . 21973) (semantic-list 21900 . 21959) (symbol 21885 . 21900) (punctuation ">" 21928 . 21956) (symbol 21863 . 21868) (punctuation ">" 21928 . 21956) (punctuation 21862 . 21863) (punctuation 21861 . 21862) (symbol 21858 . 21861) (punctuation ">" 21928 . 21956) (semantic-list 21784 . 21841) (symbol 21769 . 21784) (punctuation 21767 . 21768) (punctuation 21751 . 21752) (symbol 21746 . 21751) (punctuation 21744 . 21745) (symbol 21740 . 21744) (punctuation 21739 . 21740) (punctuation 21738 . 21739) (punctuation 21737 . 21738) (symbol 21717 . 21737) (punctuation 21716 . 21717) (symbol 21710 . 21716) (punctuation 21709 . 21710) (punctuation 21708 . 21709) (symbol 21705 . 21708) (TYPENAME 21696 . 21704) (punctuation 21695 . 21696) (symbol 21688 . 21695) (punctuation 21670 . 21671) (symbol 21666 . 21670) (punctuation 21665 . 21666) (punctuation 21664 . 21665) (symbol 21661 . 21664) (punctuation 20932 . 20933) (symbol 20929 . 20932) (punctuation 20928 . 20929) (punctuation 20927 . 20928) (symbol 20924 . 20927) (punctuation 20922 . 20923) (symbol 20905 . 20915) (STRUCT 20898 . 20904) (punctuation 20892 . 20893) (symbol 20872 . 20892) (CLASS 20866 . 20871) (punctuation 20865 . 20866) (TEMPLATE 20856 . 20864) (punctuation 20371 . 20372) (punctuation 20370 . 20371) (semantic-list #("(n, BOOST_PARAMETER_right_angle, _)" 0 1 (macros (("parameter_spec" symbol "make_deduced_items" 20342 . 20360) ("make" symbol "aux" 20337 . 20340) ("n" symbol "BOOST_PARAMETER_MAX_ARITY" 20310 . 20335)))) 20266 . 20370) (symbol "BOOST_PP_REPEAT" 20266 . 20370) (punctuation ">" 20266 . 20370) (symbol "void_" 20266 . 20370) (punctuation "<" 20266 . 20370) (symbol "identity" 20266 . 20370) (punctuation ":" 20266 . 20370) (punctuation ":" 20266 . 20370) (symbol "mpl" 20266 . 20370) (semantic-list #("(                                                                  \\
      n, BOOST_PARAMETER_make_deduced_list, (make)(parameter_spec))" 0 1 (macros (("parameter_spec" symbol "make_deduced_items" 20342 . 20360) ("make" symbol "aux" 20337 . 20340) ("n" symbol "BOOST_PARAMETER_MAX_ARITY" 20310 . 20335)))) 20266 . 20370) (symbol "BOOST_PP_REPEAT" 20266 . 20370) (TYPENAME 20257 . 20265) (TYPEDEF 20249 . 20256) (punctuation 20185 . 20186) (semantic-list 20123 . 20184) (symbol 20102 . 20123) (punctuation 20100 . 20101) (symbol 20093 . 20096) (CLASS 20087 . 20092) (punctuation 20080 . 20081) (TEMPLATE 20072 . 20080) (punctuation 17599 . 17600) (symbol 17595 . 17599) (punctuation 17594 . 17595) (punctuation 17593 . 17594) (symbol 17589 . 17593) (TYPENAME 17580 . 17588) (punctuation 17578 . 17579) (symbol 17574 . 17578) (punctuation 17573 . 17574) (symbol 17561 . 17573) (TYPEDEF 17553 . 17560) (punctuation 16955 . 16956) (symbol 16951 . 16955) (punctuation 16950 . 16951) (punctuation 16949 . 16950) (symbol 16945 . 16949) (TYPENAME 16936 . 16944) (punctuation 16934 . 16935) (symbol 16931 . 16934) (punctuation 16929 . 16930) (symbol 16925 . 16929) (punctuation 16924 . 16925) (symbol 16920 . 16924) (TYPEDEF 16912 . 16919) (punctuation 16519 . 16520) (punctuation 16518 . 16519) (punctuation 16517 . 16518) (symbol 16505 . 16510) (punctuation 16503 . 16504) (symbol 16489 . 16503) (punctuation 16487 . 16488) (symbol 16483 . 16487) (punctuation 16482 . 16483) (punctuation 16481 . 16482) (symbol 16478 . 16481) (punctuation 16476 . 16477) (symbol 16471 . 16476) (punctuation 16470 . 16471) (punctuation 16469 . 16470) (symbol 16466 . 16469) (punctuation 16464 . 16465) (symbol 16459 . 16464) (punctuation 16457 . 16458) (symbol 16446 . 16457) (punctuation 16444 . 16445) (symbol 16440 . 16444) (punctuation 16428 . 16429) (symbol 16411 . 16428) (TYPENAME 16402 . 16410) (TYPEDEF 16394 . 16401) (punctuation 16359 . 16360) (symbol 16351 . 16356) (punctuation 16350 . 16351) (punctuation 16349 . 16350) (symbol 16346 . 16349) (punctuation 16344 . 16345) (symbol 16333 . 16343) (CLASS 16327 . 16332) (punctuation 16325 . 16326) (symbol 16315 . 16320) (CLASS 16309 . 16314) (punctuation 16307 . 16308) (symbol 16291 . 16302) (CLASS 16285 . 16290) (punctuation 16283 . 16284) (symbol 16274 . 16278) (CLASS 16268 . 16273) (punctuation 16260 . 16261) (TEMPLATE 16251 . 16259) (punctuation 13981 . 13982) (punctuation 13980 . 13981) (punctuation 13979 . 13980) (symbol 13967 . 13972) (punctuation 13965 . 13966) (symbol 13943 . 13956) (punctuation 13941 . 13942) (symbol 13926 . 13932) (punctuation 13925 . 13926) (punctuation 13924 . 13925) (symbol 13912 . 13924) (TYPENAME 13903 . 13911) (punctuation 13901 . 13902) (symbol 13882 . 13892) (punctuation 13880 . 13881) (symbol 13866 . 13871) (punctuation 13864 . 13865) (symbol 13844 . 13855) (punctuation 13842 . 13843) (symbol 13829 . 13833) (punctuation 13828 . 13829) (punctuation 13827 . 13828) (symbol 13823 . 13827) (TYPENAME 13814 . 13822) (punctuation 13802 . 13803) (symbol 13785 . 13802) (TYPENAME 13776 . 13784) (TYPEDEF 13768 . 13775) (punctuation 11623 . 11624) (punctuation 11622 . 11623) (punctuation 11621 . 11622) (symbol 11607 . 11621) (punctuation 11606 . 11607) (symbol 11598 . 11606) (TYPENAME 11589 . 11597) (TYPEDEF 11581 . 11588) (punctuation 10868 . 10869) (punctuation 10867 . 10868) (punctuation 10866 . 10867) (symbol 10851 . 10859) (punctuation 10850 . 10851) (punctuation 10849 . 10850) (symbol 10843 . 10849) (TYPENAME 10834 . 10842) (punctuation 10832 . 10833) (symbol 10824 . 10832) (punctuation 10812 . 10813) (symbol 10805 . 10812) (punctuation 10804 . 10805) (punctuation 10803 . 10804) (symbol 10800 . 10803) (TYPENAME 10791 . 10799) (TYPEDEF 10783 . 10790) (punctuation 9393 . 9394) (punctuation 9392 . 9393) (punctuation 9391 . 9392) (punctuation 9383 . 9384) (symbol 9378 . 9383) (punctuation 9376 . 9377) (symbol 9368 . 9376) (punctuation 9366 . 9367) (symbol 9362 . 9366) (punctuation 9361 . 9362) (punctuation 9360 . 9361) (symbol 9349 . 9360) (TYPENAME 9340 . 9348) (punctuation 9338 . 9339) (symbol 9326 . 9338) (punctuation 9324 . 9325) (symbol 9316 . 9324) (punctuation 9315 . 9316) (symbol 9305 . 9315) (punctuation 9303 . 9304) (punctuation 9293 . 9294) (symbol 9288 . 9293) (punctuation 9286 . 9287) (symbol 9278 . 9286) (punctuation 9276 . 9277) (symbol 9272 . 9276) (punctuation 9270 . 9271) (symbol 9262 . 9270) (punctuation 9261 . 9262) (symbol 9250 . 9261) (punctuation 9248 . 9249) (symbol 9230 . 9239) (punctuation 9218 . 9219) (symbol 9211 . 9218) (punctuation 9210 . 9211) (punctuation 9209 . 9210) (symbol 9206 . 9209) (TYPENAME 9197 . 9205) (TYPEDEF 9189 . 9196) (semantic-list 9032 . 9179) (punctuation 8936 . 8937) (punctuation 8935 . 8936) (punctuation 8934 . 8935) (symbol 8915 . 8927) (punctuation 8913 . 8914) (symbol 8896 . 8904) (punctuation 8894 . 8895) (symbol 8881 . 8885) (punctuation 8880 . 8881) (punctuation 8879 . 8880) (punctuation 8878 . 8879) (symbol 8857 . 8867) (punctuation 8855 . 8856) (symbol 8846 . 8855) (punctuation 8845 . 8846) (punctuation 8844 . 8845) (symbol 8840 . 8844) (TYPENAME 8831 . 8839) (punctuation 8815 . 8816) (symbol 8809 . 8815) (punctuation 8808 . 8809) (punctuation 8807 . 8808) (symbol 8804 . 8807) (TYPENAME 8795 . 8803) (punctuation 8783 . 8784) (symbol 8772 . 8783) (punctuation 8771 . 8772) (punctuation 8770 . 8771) (symbol 8767 . 8770) (TYPENAME 8758 . 8766) (TYPEDEF 8750 . 8757) (punctuation 8289 . 8290) (symbol 8278 . 8282) (punctuation 8277 . 8278) (punctuation 8276 . 8277) (punctuation 8275 . 8276) (symbol 8271 . 8275) (punctuation 8270 . 8271) (punctuation 8269 . 8270) (punctuation 8268 . 8269) (symbol 8264 . 8268) (punctuation 8263 . 8264) (symbol 8255 . 8263) (TYPENAME 8246 . 8254) (punctuation 8244 . 8245) (symbol 8236 . 8244) (punctuation 8235 . 8236) (symbol 8228 . 8235) (punctuation 8227 . 8228) (punctuation 8226 . 8227) (symbol 8223 . 8226) (TYPENAME 8214 . 8222) (punctuation 8212 . 8213) (symbol 8199 . 8203) (punctuation 8198 . 8199) (punctuation 8197 . 8198) (punctuation 8196 . 8197) (symbol 8193 . 8196) (punctuation 8191 . 8192) (symbol 8187 . 8191) (punctuation 8186 . 8187) (punctuation 8185 . 8186) (punctuation 8184 . 8185) (symbol 8180 . 8184) (punctuation 8179 . 8180) (symbol 8171 . 8179) (TYPENAME 8162 . 8170) (punctuation 8160 . 8161) (symbol 8155 . 8160) (punctuation 8154 . 8155) (symbol 8143 . 8154) (punctuation 8142 . 8143) (punctuation 8141 . 8142) (symbol 8138 . 8141) (TYPENAME 8129 . 8137) (punctuation 8117 . 8118) (symbol 8113 . 8117) (punctuation 8112 . 8113) (punctuation 8111 . 8112) (symbol 8108 . 8111) (TYPEDEF 8100 . 8107) (punctuation 7830 . 7831) (semantic-list 7828 . 7830) (punctuation 7824 . 7825) (symbol 7813 . 7817) (punctuation 7812 . 7813) (punctuation 7811 . 7812) (punctuation 7810 . 7811) (symbol 7797 . 7810) (punctuation 7796 . 7797) (symbol 7771 . 7796) (TYPENAME 7762 . 7770) (punctuation 7760 . 7761) (symbol 7744 . 7751) (punctuation 7732 . 7733) (symbol 7723 . 7732) (punctuation 7721 . 7722) (symbol 7691 . 7716) (STRUCT 7684 . 7690) (punctuation 7680 . 7681) (symbol 7667 . 7680) (CLASS 7661 . 7666) (punctuation 7659 . 7660) (symbol 7652 . 7659) (CLASS 7646 . 7651) (punctuation 7645 . 7646) (TEMPLATE 7636 . 7644) (punctuation 6186 . 6187) (symbol 6175 . 6179) (punctuation 6174 . 6175) (punctuation 6173 . 6174) (punctuation 6172 . 6173) (symbol 6159 . 6172) (punctuation 6158 . 6159) (symbol 6147 . 6158) (TYPENAME 6138 . 6146) (punctuation 6136 . 6137) (symbol 6123 . 6127) (punctuation 6122 . 6123) (punctuation 6121 . 6122) (punctuation 6120 . 6121) (symbol 6107 . 6120) (punctuation 6106 . 6107) (symbol 6097 . 6106) (TYPENAME 6088 . 6096) (punctuation 6086 . 6087) (symbol 6073 . 6077) (punctuation 6072 . 6073) (punctuation 6071 . 6072) (punctuation 6070 . 6071) (symbol 6057 . 6070) (punctuation 6056 . 6057) (symbol 6048 . 6056) (TYPENAME 6039 . 6047) (punctuation 6027 . 6028) (symbol 6005 . 6027) (TYPEDEF 5997 . 6004) (punctuation 5402 . 5403) (punctuation 5401 . 5402) (punctuation 5400 . 5401) (symbol 5391 . 5400) (punctuation 5390 . 5391) (punctuation 5389 . 5390) (symbol 5388 . 5389) (TYPENAME 5379 . 5387) (punctuation 5378 . 5379) (symbol 5354 . 5378) (TYPENAME 5335 . 5343) (TYPEDEF 5327 . 5334) (punctuation 4689 . 4690) (semantic-list 4687 . 4689) (punctuation 4683 . 4684) (punctuation 4675 . 4676) (symbol 4667 . 4675) (punctuation 4666 . 4667) (punctuation 4665 . 4666) (symbol 4664 . 4665) (TYPENAME 4655 . 4663) (punctuation 4654 . 4655) (symbol 4646 . 4654) (punctuation 4645 . 4646) (punctuation 4644 . 4645) (symbol 4641 . 4644) (punctuation 4639 . 4640) (punctuation 4629 . 4630) (symbol 4621 . 4629) (punctuation 4620 . 4621) (punctuation 4619 . 4620) (symbol 4618 . 4619) (TYPENAME 4609 . 4617) (punctuation 4608 . 4609) (symbol 4595 . 4608) (punctuation 4593 . 4594) (punctuation 4583 . 4584) (symbol 4575 . 4583) (punctuation 4574 . 4575) (punctuation 4573 . 4574) (symbol 4572 . 4573) (TYPENAME 4563 . 4571) (punctuation 4562 . 4563) (symbol 4548 . 4562) (punctuation 4536 . 4537) (symbol 4529 . 4536) (punctuation 4528 . 4529) (punctuation 4527 . 4528) (symbol 4524 . 4527) (punctuation 4522 . 4523) (symbol 4505 . 4517) (STRUCT 4498 . 4504) (punctuation 4494 . 4495) (symbol 4493 . 4494) (CLASS 4487 . 4492) (punctuation 4486 . 4487) (TEMPLATE 4477 . 4485) (punctuation 3729 . 3730) (punctuation 3728 . 3729) (punctuation 3727 . 3728) (symbol 3712 . 3720) (punctuation 3711 . 3712) (punctuation 3710 . 3711) (symbol 3709 . 3710) (TYPENAME 3700 . 3708) (punctuation 3688 . 3689) (symbol 3674 . 3688) (punctuation 3672 . 3673) (symbol 3656 . 3667) (STRUCT 3649 . 3655) (punctuation 3645 . 3646) (symbol 3644 . 3645) (CLASS 3638 . 3643) (punctuation 3637 . 3638) (TEMPLATE 3628 . 3636) (semantic-list 3599 . 3624) (symbol 3576 . 3599) (number 3622 . 3623) (semantic-list 3550 . 3573) (symbol 3527 . 3550) (number 3571 . 3572) (semantic-list 3501 . 3524) (symbol 3478 . 3501) (number 3522 . 3523) (punctuation 3170 . 3171) (symbol 3159 . 3170) (punctuation 3158 . 3159) (punctuation 3157 . 3158) (symbol 3154 . 3157) (punctuation 3152 . 3153) (symbol 3142 . 3151) (CLASS 3136 . 3141) (punctuation 3134 . 3135) (symbol 3131 . 3134) (CLASS 3125 . 3130) (punctuation 3124 . 3125) (TEMPLATE 3115 . 3123) (punctuation 3032 . 3033) (symbol 3021 . 3032) (punctuation 3020 . 3021) (punctuation 3019 . 3020) (symbol 3016 . 3019) (punctuation 3014 . 3015) (symbol 3004 . 3013) (CLASS 2998 . 3003) (punctuation 2996 . 2997) (symbol 2993 . 2996) (CLASS 2987 . 2992) (punctuation 2986 . 2987) (TEMPLATE 2977 . 2985) (semantic-list 1993 . 2017))
      :lexical-table 
        '(("BOOST_PARAMETER_make_arg_list" (spp-arg-list ("z" "n" "names") 18194 . 18207) . 
              ((symbol "BOOST_PP_SEQ_ELEM" 18221 . 18238) (semantic-list "(0,names)" 18238 . 18247) (punctuation "<" 18247 . 18248) (symbol "BOOST_PP_CAT" 18283 . 18295) (semantic-list "(BOOST_PP_SEQ_ELEM(1,names), n)" 18295 . 18326) (punctuation "," 18326 . 18327) (symbol "BOOST_PP_CAT" 18341 . 18353) (semantic-list "(BOOST_PP_SEQ_ELEM(2,names), n)" 18353 . 18384) (punctuation "," 18384 . 18385)))
          ("BOOST_PARAMETER_FORWARD_TYPEDEF" (spp-arg-list ("z" "i" "names") 19743 . 19756) . 
              ((TYPEDEF "typedef" 19763 . 19770) (symbol "BOOST_PP_CAT" 19771 . 19783) (semantic-list "(BOOST_PP_SEQ_ELEM(0,names),i)" 19783 . 19813) (symbol "BOOST_PP_CAT" 19814 . 19826) (semantic-list "(BOOST_PP_SEQ_ELEM(1,names),i)" 19826 . 19856) (punctuation ";" 19856 . 19857)))
          ("BOOST_PARAMETER_FORWARD_TYPEDEFS" (spp-arg-list ("n" "src" "dest") 19899 . 19913) . ((symbol "BOOST_PP_REPEAT" 19920 . 19935) (semantic-list "(n, BOOST_PARAMETER_FORWARD_TYPEDEF, (src)(dest))" 19935 . 19984)))
          ("BOOST_PARAMETER_right_angle" (spp-arg-list ("z" "n" "text") 18423 . 18435) . ((punctuation ">" 18436 . 18437)))
          ("BOOST_PARAMETERS_031014_HPP")
          ("BOOST_PARAMETER_build_arg_list" (spp-arg-list ("n" "make" "parameter_spec" "argument_type") 18477 . 18517) . 
              ((symbol "BOOST_PP_REPEAT" 18527 . 18542) (semantic-list "(                                                                  \\
      n, BOOST_PARAMETER_make_arg_list, (make)(parameter_spec)(argument_type))" 18542 . 18689) (symbol "mpl" 18703 . 18706) (punctuation ":" 18706 . 18707) (punctuation ":" 18707 . 18708) (symbol "identity" 18708 . 18716) (punctuation "<" 18716 . 18717) (symbol "void_" 18717 . 18722) (punctuation ">" 18722 . 18723) (symbol "BOOST_PP_REPEAT" 18785 . 18800) (semantic-list "(n, BOOST_PARAMETER_right_angle, _)" 18800 . 18835)))
          ("BOOST_PARAMETER_make_deduced_list" (spp-arg-list ("z" "n" "names") 18878 . 18891) . 
              ((symbol "BOOST_PP_SEQ_ELEM" 18901 . 18918) (semantic-list "(0,names)" 18918 . 18927) (punctuation "<" 18927 . 18928) (symbol "BOOST_PP_CAT" 18963 . 18975) (semantic-list "(BOOST_PP_SEQ_ELEM(1,names), n)" 18975 . 19006) (punctuation "," 19006 . 19007)))
          ("BOOST_PP_ITERATION_PARAMS_1" . ((semantic-list "(3,( \\
        3,BOOST_PARAMETER_MAX_ARITY,<boost/parameter/aux_/overloads.hpp> \\
    ))" 26835 . 26923)))
          ("BOOST_PARAMETER_build_deduced_list" (spp-arg-list ("n" "make" "parameter_spec") 19051 . 19076) . 
              ((symbol "BOOST_PP_REPEAT" 19097 . 19112) (semantic-list "(                                                                  \\
      n, BOOST_PARAMETER_make_deduced_list, (make)(parameter_spec))" 19112 . 19248) (symbol "mpl" 19269 . 19272) (punctuation ":" 19272 . 19273) (punctuation ":" 19273 . 19274) (symbol "identity" 19274 . 19282) (punctuation "<" 19282 . 19283) (symbol "void_" 19283 . 19288) (punctuation ">" 19288 . 19289) (symbol "BOOST_PP_REPEAT" 19355 . 19370) (semantic-list "(n, BOOST_PARAMETER_right_angle, _)" 19370 . 19405)))
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_PARAMETER_BINDING_DWA200558_HPP" variable (:constant-flag t) nil [243 280])
            ("boost/mpl/apply.hpp" include (:system-flag t) nil [282 313])
            ("boost/mpl/assert.hpp" include (:system-flag t) nil [314 346])
            ("boost/mpl/and.hpp" include (:system-flag t) nil [347 376])
            ("boost/parameter/aux_/result_of0.hpp" include (:system-flag t) nil [377 424])
            ("boost/parameter/aux_/void.hpp" include (:system-flag t) nil [425 466])
            ("boost/type_traits/is_same.hpp" include (:system-flag t) nil [467 508])
            ("boost" type
               (:members 
                  ( ("parameter" type
                       (:members 
                          ( ("binding" type
                               (:template 
                                  ( ("Parameters" type (:type "class") nil nil)
                                    ("Keyword" type (:type "class") nil nil)
                                    ("Default" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("type" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1813 1823])
                                    ("BOOST_MPL_ASSERT_NOT" function
                                       (:prototype-flag t
                                        :type "int")
                                        (reparse-symbol classsubparts) [1829 1957]))                                  )
                                (reparse-symbol namespacesubparts) [1266 2093])
                            ("lazy_binding" type
                               (:template 
                                  ( ("Parameters" type (:type "class") nil nil)
                                    ("Keyword" type (:type "class") nil nil)
                                    ("DefaultFn" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("type" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2921 2931]))                                  )
                                (reparse-symbol namespacesubparts) [2683 2934]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [614 2938]))                  
                :type "namespace")
                nil [596 2939]))          
      :file "binding.hpp"
      :pointmax 3019
      :fsize 3018
      :lastmodtime '(20225 54169 0 0)
      :unmatched-syntax '((punctuation 2920 . 2921) (punctuation 2919 . 2920) (punctuation 2918 . 2919) (symbol 2910 . 2915) (punctuation 2909 . 2910) (punctuation 2908 . 2909) (symbol 2905 . 2908) (punctuation 2903 . 2904) (symbol 2894 . 2898) (punctuation 2893 . 2894) (punctuation 2892 . 2893) (punctuation 2891 . 2892) (symbol 2882 . 2891) (punctuation 2881 . 2882) (symbol 2871 . 2881) (punctuation 2870 . 2871) (punctuation 2869 . 2870) (symbol 2866 . 2869) (TYPENAME 2857 . 2865) (punctuation 2855 . 2856) (symbol 2843 . 2850) (punctuation 2841 . 2842) (symbol 2829 . 2836) (punctuation 2828 . 2829) (punctuation 2827 . 2828) (symbol 2817 . 2827) (TYPENAME 2808 . 2816) (punctuation 2800 . 2801) (symbol 2789 . 2800) (punctuation 2788 . 2789) (punctuation 2787 . 2788) (symbol 2784 . 2787) (TYPENAME 2775 . 2783) (TYPEDEF 2767 . 2774) (semantic-list 2042 . 2082) (symbol 2014 . 2042) (semantic-list 2053 . 2081) (number 2043 . 2044) (semantic-list 1850 . 1955) (punctuation 1812 . 1813) (punctuation 1811 . 1812) (punctuation 1810 . 1811) (symbol 1800 . 1805) (punctuation 1799 . 1800) (punctuation 1798 . 1799) (symbol 1795 . 1798) (punctuation 1794 . 1795) (symbol 1787 . 1794) (punctuation 1786 . 1787) (symbol 1779 . 1786) (punctuation 1778 . 1779) (symbol 1771 . 1778) (punctuation 1770 . 1771) (punctuation 1769 . 1770) (symbol 1759 . 1769) (TYPENAME 1750 . 1758) (punctuation 1740 . 1741) (symbol 1729 . 1740) (punctuation 1728 . 1729) (punctuation 1727 . 1728) (symbol 1724 . 1727) (TYPENAME 1715 . 1723) (TYPEDEF 1707 . 1714))
      :lexical-table 
        '(("BOOST_PARAMETER_BINDING_DWA200558_HPP")
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("KEYWORD_050328_HPP" variable (:constant-flag t) nil [273 291])
            ("boost/parameter/aux_/unwrap_cv_reference.hpp" include (:system-flag t) nil [293 348])
            ("boost/parameter/aux_/tag.hpp" include (:system-flag t) nil [349 388])
            ("boost/parameter/aux_/default.hpp" include (:system-flag t) nil [389 432])
            ("boost" type
               (:members 
                  ( ("parameter" type
                       (:members 
                          ( ("keyword" type
                               (:template 
                                  ( ("Tag" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("=" function
                                       (:template 
                                          ( ("T" type (:type "class") nil nil))                                          
                                        :type ("aux::tag::type" type (:type "class") nil nil)
                                        :arguments 
                                          ( ("x" variable
                                               (:reference 1
                                                :type ("T" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [940 945]))                                          
                                        :typemodifiers ("typename")
                                        :operator-flag t
                                        :methodconst-flag t)
                                        (reparse-symbol classsubparts) [865 1045])
                                    ("|" function
                                       (:template 
                                          ( ("Default" type (:type "class") nil nil))                                          
                                        :type ("aux::default_" type
                                             (:template-specifier 
                                                ( ("Tag" type nil nil nil)
                                                  ("Default" type nil nil nil))                                                
                                              :type "class")
                                              nil nil)
                                        :arguments 
                                          ( ("default_" variable
                                               (:reference 1
                                                :type ("Default" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [1122 1140]))                                          
                                        :operator-flag t
                                        :methodconst-flag t)
                                        (reparse-symbol classsubparts) [1051 1212])
                                    ("||" function
                                       (:template 
                                          ( ("Default" type (:type "class") nil nil))                                          
                                        :type ("aux::lazy_default" type
                                             (:template-specifier 
                                                ( ("Tag" type nil nil nil)
                                                  ("Default" type nil nil nil))                                                
                                              :type "class")
                                              nil nil)
                                        :arguments 
                                          ( ("default_" variable
                                               (:reference 1
                                                :type ("Default" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [1294 1312]))                                          
                                        :operator-flag t
                                        :methodconst-flag t)
                                        (reparse-symbol classsubparts) [1218 1388])
                                    ("=" function
                                       (:template 
                                          ( ("T" type (:type "class") nil nil))                                          
                                        :type ("aux::tag::type" type (:type "class") nil nil)
                                        :arguments 
                                          ( ("x" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("T" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [1549 1560]))                                          
                                        :typemodifiers ("typename")
                                        :operator-flag t
                                        :methodconst-flag t)
                                        (reparse-symbol classsubparts) [1468 1666])
                                    ("|" function
                                       (:template 
                                          ( ("Default" type (:type "class") nil nil))                                          
                                        :type ("aux::default_" type
                                             (:template-specifier 
                                                ( ("Tag" type nil nil nil)
                                                  ("Default" type (:constant-flag t) nil nil))                                                
                                              :type "class")
                                              nil nil)
                                        :arguments 
                                          ( ("default_" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("Default" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [1831 1855]))                                          
                                        :operator-flag t
                                        :methodconst-flag t)
                                        (reparse-symbol classsubparts) [1754 2000])
                                    ("||" function
                                       (:template 
                                          ( ("Default" type (:type "class") nil nil))                                          
                                        :type ("aux::lazy_default" type
                                             (:template-specifier 
                                                ( ("Tag" type nil nil nil)
                                                  ("Default" type nil nil nil))                                                
                                              :type "class")
                                              nil nil)
                                        :arguments 
                                          ( ("default_" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("Default" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [2082 2106]))                                          
                                        :operator-flag t
                                        :methodconst-flag t)
                                        (reparse-symbol classsubparts) [2006 2249])
                                    ("public" label nil (reparse-symbol classsubparts) [2259 2266])
                                    ("instance" variable
                                       (:typemodifiers ("static")
                                        :type ("keyword" type
                                             (:template-specifier 
                                                ( ("Tag" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol classsubparts) [2639 2674])
                                    ("get" function
                                       (:typemodifiers ("static")
                                        :type ("keyword" type
                                             (:template-specifier 
                                                ( ("Tag" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol classsubparts) [2716 2806]))                                  )
                                (reparse-symbol namespacesubparts) [823 2809])
                            ("keyword::instance" variable
                               (:default-value "{}"
                                :type ("keyword" type
                                     (:template-specifier 
                                        ( ("Tag" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol namespacesubparts) [2811 2879])
                            ("BOOST_PARAMETER_KEYWORD" variable (:constant-flag t) (reparse-symbol namespacesubparts) [4181 4204]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [452 5239]))                  
                :type "namespace")
                nil [434 5240]))          
      :file "keyword.hpp"
      :pointmax 5302
      :fsize 5301
      :lastmodtime '(20225 54169 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("KEYWORD_050328_HPP")
          ("BOOST_PARAMETER_KEYWORD" (spp-arg-list ("tag_namespace" "name") 4204 . 4224) . 
              ((NAMESPACE "namespace" 4247 . 4256) (symbol "tag_namespace" 4257 . 4270) (semantic-list "{                                                               \\
      struct name                                                   \\
      {                                                             \\
          static char const* keyword_name()                         \\
          {                                                         \\
              return #name;                                         \\
          }                                                         \\
      };                                                            \\
    }" 4317 . 4878) (NAMESPACE "namespace" 4947 . 4956) (semantic-list "{                                                               \\
       ::boost::parameter::keyword<tag_namespace::name> const& name \\
       = ::boost::parameter::keyword<tag_namespace::name>::instance;\\
    }" 5017 . 5228)))
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_PARAMETER_CONFIG_050403_HPP" variable (:constant-flag t) nil [288 321])
            ("BOOST_PARAMETER_MAX_ARITY" variable (:constant-flag t) nil [366 391]))          
      :file "config.hpp"
      :pointmax 447
      :fsize 446
      :lastmodtime '(20225 54169 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("BOOST_PARAMETER_CONFIG_050403_HPP")
          ("BOOST_PARAMETER_MAX_ARITY" . ((number "5" 392 . 393)))
          )
))
  :file "!usr!include!boost!parameter!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
