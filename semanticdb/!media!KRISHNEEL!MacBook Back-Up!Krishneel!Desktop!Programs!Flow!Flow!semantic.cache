;; Object semanticdb-project-database-file
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "semanticdb-project-database-file"
  :tables
  (list
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("iostream" include (:system-flag t) nil [145 164])
            ("math.h" include (:system-flag t) nil [165 182])
            ("opencv2/opencv.hpp" include (:system-flag t) nil [184 213])
            ("opencv2/highgui/highgui.hpp" include (:system-flag t) nil [214 252])
            ("opencv2/imgproc/imgproc.hpp" include (:system-flag t) nil [253 291])
            ("opencv2/features2d/features2d.hpp" include (:system-flag t) nil [292 336])
            ("opencv2/nonfree/features2d.hpp" include (:system-flag t) nil [337 378])
            ("opencv2/legacy/legacy.hpp" include (:system-flag t) nil [379 415])
            ("opencv2/objdetect/objdetect.hpp" include (:system-flag t) nil [416 458])
            ("cv" using (:type ("cv" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [460 479])
            ("std" using (:type ("std" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [480 500])
            ("Vedio_Capture" function
               (:prototype-flag t
                :type "void")
                nil [502 523])
            ("Optical_Flow" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [542 546])
                    ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [547 551]))                  
                :type "void")
                nil [524 552])
            ("Surfdetectorion" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [574 578]))                  
                :type "void")
                nil [553 579])
            ("Gaussian_Color_Model" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [606 610]))                  
                :type "void")
                nil [580 611])
            ("Scene_GMM_Model" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [633 637]))                  
                :type "void")
                nil [612 638])
            ("params" function
               (:prototype-flag t
                :type ("EMParams" type (:type "class") nil nil))
                nil [640 659])
            ("em" variable (:type ("ExpectationMaximization" type (:type "class") nil nil)) nil [660 687])
            ("means" variable (:type ("cv::Mat" type (:type "class") nil nil)) nil [688 702])
            ("weights" variable (:type ("cv::Mat" type (:type "class") nil nil)) nil [703 719])
            ("code" variable
               (:default-value "CV_BGR2YUV"
                :type "int")
                nil [720 742])
            ("main" function
               (:arguments 
                  ( ("argc" variable (:type "int") (reparse-symbol arg-sub-list) [753 762])
                    ("argv" variable
                       (:pointer 1
                        :dereference 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [763 783]))                  
                :type "int")
                nil [744 879])
            ("Optical_Flow" function
               (:arguments 
                  ( ("prevImg" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [899 911])
                    ("nextImg" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [912 924]))                  
                :type "void")
                nil [881 1781])
            ("Surfdetectorion" function
               (:arguments 
                  ( ("img_scene" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1804 1818]))                  
                :type "void")
                nil [1783 5516])
            ("Vedio_Capture" function (:type "void") nil [5517 6836])
            ("Gaussian_Color_Model" function
               (:arguments 
                  ( ("source" variable (:type ("cv::Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6864 6879]))                  
                :type "void")
                nil [6838 7525])
            ("Scene_GMM_Model" function
               (:arguments 
                  ( ("img" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7548 7556]))                  
                :type "void")
                nil [7527 9091]))          
      :file "main.cpp"
      :pointmax 9091
      :fsize 9090
      :lastmodtime '(21136 44226 0 0)
      :unmatched-syntax '((number 656 . 657))))
  :file "!media!KRISHNEEL!MacBook Back-Up!Krishneel!Desktop!Programs!Flow!Flow!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
